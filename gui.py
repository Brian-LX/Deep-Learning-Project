# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5.QtWidgets import QFileDialog,QApplication
import os
import time
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(980, 776)
        font = QtGui.QFont()
        font.setPointSize(8)
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(90, 60, 91, 31))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(200, 70, 271, 31))
        self.lineEdit.setObjectName("lineEdit")
        self.seletefile = QtWidgets.QPushButton(self.centralwidget)
        self.seletefile.setGeometry(QtCore.QRect(520, 70, 111, 31))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.seletefile.setFont(font)
        self.seletefile.setObjectName("seletefile")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(200, 130, 271, 31))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.selectdir = QtWidgets.QPushButton(self.centralwidget)
        self.selectdir.setGeometry(QtCore.QRect(520, 130, 111, 31))
        self.selectdir.setObjectName("selectdir")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(70, 250, 801, 451))
        self.label_3.setAutoFillBackground(True)
        self.label_3.setText("")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(90, 200, 101, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(370, 10, 231, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.startlpr = QtWidgets.QPushButton(self.centralwidget)
        self.startlpr.setGeometry(QtCore.QRect(690, 70, 151, 31))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.startlpr.setFont(font)
        self.startlpr.setObjectName("startlpr")
        self.exit = QtWidgets.QPushButton(self.centralwidget)
        self.exit.setGeometry(QtCore.QRect(690, 180, 151, 51))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.exit.setFont(font)
        self.exit.setObjectName("exit")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(90, 130, 91, 31))
        self.label_2.setObjectName("label_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_3.setGeometry(QtCore.QRect(200, 180, 431, 51))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setText("")
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.nextimg = QtWidgets.QPushButton(self.centralwidget)
        self.nextimg.setGeometry(QtCore.QRect(690, 130, 151, 31))
        self.nextimg.setObjectName("nextimg")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 980, 29))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.exit.clicked.connect(MainWindow.close)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Picture Path"))
        self.seletefile.setText(_translate("MainWindow", "PushButton"))
        self.selectdir.setText(_translate("MainWindow", "PushButton"))
        self.label_4.setText(_translate("MainWindow", "Result"))
        self.label_5.setText(_translate("MainWindow", "RiceLeaf classification"))
        self.startlpr.setText(_translate("MainWindow", "PushButton"))
        self.exit.setText(_translate("MainWindow", "PushButton"))
        self.label_2.setText(_translate("MainWindow", "Picture Path"))
        self.nextimg.setText(_translate("MainWindow", "PushButton"))

    def select_image(self):
        imgName, imgType = QFileDialog.getOpenFileName(self, "Open picture", "", "*.jpg;;*.png;;All Files(*)")
        self.lineEdit.setText(imgName)
        if imgName == "":
            print("\nDeselect")
            return
        print("\nThe training data folder you choose is:")
        print(imgName)



    def choose_dir(self):
        dir_choose = QFileDialog.getExistingDirectory(self,
                                    "Select folder",
                                    self.cwd) 
        self.lineEdit_2.setText(dir_choose)
        if dir_choose == "":
            print("\ndeselect")
            return
        files = os.listdir(dir_choose)
        for f in files:
            self.file_list.append("./image/" + f)
        # self.file_lise = [(dir_choose + "/" + f) for f in files]
        print("\nThe training data file you select is:")
        print(self.file_list)

    def next_img(self):
        for file in self.file_list:
            self.process(file)
            time.sleep(3)


    def start(self):

        self.process(self.lineEdit.displayText())